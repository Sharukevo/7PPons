{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Sharukevo/Hyakutake/blob/main/Hyakutake_comet_vector_table\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Plotting Halley's Comet\n"
      ],
      "metadata": {
        "id": "wBOT68PunI_u"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Start with importing some common libraries"
      ],
      "metadata": {
        "id": "AiXy_KsIpYe_"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 91,
      "metadata": {
        "id": "TzS4jj18K-Kv"
      },
      "outputs": [],
      "source": [
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "I've put the JPL Horizons data in a github repository so I can access it in the notebook.\n",
        "\n",
        "https://github.com/hedbergj/PHYS-45400/tree/master/data\n",
        "\n",
        "(but note it needs the raw url for the file path)\n",
        "\n",
        "You could also upload the file to the working directory for your notebook, but then it will be deleted if you restart things. "
      ],
      "metadata": {
        "id": "Kj-m1R-gpbqc"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "\n",
        "## Import the file\n",
        "\n",
        "The `np.genfromtext()` is a simple function that will load the `csv` file and parse it, making lists of the columns it finds. \n",
        "\n",
        "We have to tell it to skip some rows in the beginning and the end since these are just full of meta-data. \n",
        "\n",
        "The delimiter is a comma `,` as it should be for a csv file, which is what we requested JPL to output. \n",
        "\n",
        "The `names=['xxx','yyy']` tells the function what to call each column since they are not well labeled as headers in the `csv` file itself. "
      ],
      "metadata": {
        "id": "wRUffUFPp19d"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "path = \"https://raw.githubusercontent.com/Sharukevo/Hyakutake/main/horizons_vectortable.csv\"\n",
        "newpath = \"https://raw.githubusercontent.com/Sharukevo/Hyakutake/main/horizons_results%20(3).txt\"\n",
        "newnewpath = \"/content/horizons_results%20(3).txt\"\n",
        "data = np.genfromtxt(path, skip_header=70, skip_footer = 48, delimiter=',', names=['JDTDB','Calendar Date','X','Y','Z'])"
      ],
      "metadata": {
        "id": "vYR25LGELLSl"
      },
      "execution_count": 92,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Now we can just plot the x and y values from our data set. \n",
        "\n",
        "The two lists we want to plot are `data['X']` and `data['Y']`. The `data` variable is what we called the output of the `np.genfromtxt()` function, and the brackets tell it which columns to get. The names of the columes where defined in the original data import line above.\n",
        "\n",
        "Since we picked the sun as our center, then we can add a little orange dot: \n",
        "\n",
        "```ax.scatter(0,0,s=6,color='orange')```\n",
        "\n",
        "to mark the sun too. \n"
      ],
      "metadata": {
        "id": "lsQb7i7KqUv6"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "fig, ax = plt.subplots()\n",
        "\n",
        "#make a sactter plot of the Halley X & Y positions\n",
        "ax.scatter(data['X'], data['Y'], s=2,color='blue')\n",
        "\n",
        "#put a sun located at 0,0\n",
        "ax.scatter(0,0,s=10,color='orange')\n",
        "\n",
        "#lable our plot\n",
        "ax.set_xlabel('X [km]')\n",
        "ax.set_ylabel('Y [km]')\n",
        "ax.set_title('Hyakutake')\n",
        "\n",
        "#make it square aspect ratio\n",
        "#ax.set_aspect('equal')\n",
        "\n",
        "#add a grid\n",
        "ax.grid()\n",
        "\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 295
        },
        "id": "tmqPwkBpLfld",
        "outputId": "ddcfb2c0-6f9c-4cf4-87ba-5c2644c1981f"
      },
      "execution_count": 93,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Since it's really a 3d system, we could plot the X vs Z data as well. "
      ],
      "metadata": {
        "id": "iYgSPSTEj6p9"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "fig, ax = plt.subplots()\n",
        "\n",
        "#make a sactter plot of the Halley X & Y positions\n",
        "ax.scatter(data['X'], data['Z'], s=2,color='blue')\n",
        "\n",
        "#put a sun located at 0,0\n",
        "ax.scatter(0,0,s=10,color='orange')\n",
        "\n",
        "#lable our plot\n",
        "ax.set_xlabel('X [km]')\n",
        "ax.set_ylabel('Y [km]')\n",
        "ax.set_title('Hyakutake')\n",
        "\n",
        "#make it square aspect ratio\n",
        "#ax.set_aspect('equal')\n",
        "\n",
        "#add a grid\n",
        "ax.grid()\n",
        "\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 295
        },
        "id": "PfFqlDMYLwYB",
        "outputId": "e63ceeaf-6161-4829-ce09-78db6e6d32d8"
      },
      "execution_count": 94,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "We can add some context. Here we pull in data from the Earth's orbit around the sun and plot that as well, in green. "
      ],
      "metadata": {
        "id": "Up_cSti7m6Su"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "path = \"https://raw.githubusercontent.com/hedbergj/PHYS-45400/master/data/earth-vector-table.csv\"\n",
        "Earthdata = np.genfromtxt(path, skip_header=54, skip_footer = 48, delimiter=',', names=['JDTDB','Calendar Date','X','Y','Z'])"
      ],
      "metadata": {
        "id": "PyVupli1j4YM"
      },
      "execution_count": 95,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "fig, ax = plt.subplots()\n",
        "\n",
        "#make a sactter plot of the Halley X & Y positions\n",
        "ax.scatter(data['X'], data['Z'], s=2,color='blue')\n",
        "ax.plot(Earthdata['X'], Earthdata['Z'], ms=2,color='green')\n",
        "\n",
        "#put a sun located at 0,0\n",
        "ax.scatter(0,0,s=10,color='orange')\n",
        "\n",
        "#lable our plot\n",
        "ax.set_xlabel('X [km]')\n",
        "ax.set_ylabel('Z [km]')\n",
        "ax.set_title('Hyakutake')\n",
        "\n",
        "#make it square aspect ratio\n",
        "#ax.set_aspect('equal')\n",
        "\n",
        "#add a grid\n",
        "ax.grid()\n",
        "\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 295
        },
        "id": "nQBl79rmkhAi",
        "outputId": "08019ace-0236-4515-a109-5ea265169d93"
      },
      "execution_count": 96,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "What might be even more helpful is to plot both views (top and side) simultaneously so we can see how the orbit of the comet compares with the orbit of the Earth."
      ],
      "metadata": {
        "id": "i8FlCafPmwgT"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "fig, axs = plt.subplots(1, 2, figsize=(7, 3), sharey=True)\n",
        "\n",
        "#make a sactter plot of the Halley X & Y positions\n",
        "axs[0].scatter(data['X'], data['Z'], s=2,color='blue')\n",
        "axs[0].plot(Earthdata['X'], Earthdata['Z'], ms=2,color='green')\n",
        "\n",
        "#put a sun located at 0,0\n",
        "axs[0].scatter(0,0,s=10,color='orange')\n",
        "\n",
        "#lable our plot\n",
        "axs[0].set_xlabel('X [km]')\n",
        "axs[0].set_ylabel('Z [km]')\n",
        "axs[0].set_title('Hyakutake + Earth Orbit \\n Side View')\n",
        "\n",
        "#make it square aspect ratio\n",
        "#axs[0].set_aspect('equal')\n",
        "\n",
        "axs[0].set_xlim(-1E9,2.5e8)\n",
        "axs[0].set_ylim(-.8E9,2.5e8)\n",
        "#add a grid\n",
        "axs[0].grid()\n",
        "\n",
        "#make a sactter plot of the Halley X & Y positions\n",
        "axs[1].scatter(data['X'], data['Y'], s=2,color='blue')\n",
        "axs[1].plot(Earthdata['X'], Earthdata['Y'], ms=1, color='green')\n",
        "\n",
        "#put a sun located at 0,0\n",
        "axs[1].scatter(0,0,s=10,color='orange')\n",
        "\n",
        "#lable our plot\n",
        "axs[1].set_xlabel('X [km]')\n",
        "axs[1].set_ylabel('Z [km]')\n",
        "axs[1].set_title('Hyakutake + Earth Orbit \\n Top View')\n",
        "\n",
        "#make it square aspect ratio\n",
        "#axs[1].set_aspect('equal')\n",
        "\n",
        "axs[1].set_xlim(-1E9,1E9)\n",
        "axs[1].set_ylim(-1E9,1E9)\n",
        "#add a grid\n",
        "axs[1].grid()\n",
        "\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 256
        },
        "id": "DJZ7_AozkpeJ",
        "outputId": "9884096c-9b01-44d1-9054-2c8e7721ee55"
      },
      "execution_count": 97,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 504x216 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "UIfRqNwYxlGi"
      },
      "execution_count": 97,
      "outputs": []
    }
  ]
}